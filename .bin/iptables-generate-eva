#!/bin/bash

EXTIF="eth0"
INTIF="tun0"
INTIFCTF="tun1"
INTIP="10.8.0.1"
INTNET="10.8.0.0/24"
LOGDROPLIMIT="2/s"
LOGDROPLIMITBURST="10"

cat >/etc/iptables/iptables.rules.new  <<EOF
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:sshguard - [0:0]

-N LOGDROP
-A LOGDROP -p tcp -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "TCP LOGDROP: "
-A LOGDROP -p udp -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "UDP LOGDROP: "
-A LOGDROP -p icmp -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "ICMP LOGDROP: "
-A LOGDROP -f -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "FRAGMENT LOGDROP: "
-A LOGDROP -j DROP

-N LOGACCEPT
-A LOGACCEPT -p tcp -j LOG --log-prefix "TCP LOGACCEPT: "
-A LOGACCEPT -p udp -j LOG --log-prefix "UDP LOGACCEPT: "
-A LOGACCEPT -p icmp -j LOG --log-prefix "ICMP LOGACCEPT: "
-A LOGACCEPT -f -j LOG --log-prefix "FRAGMENT LOGACCEPT: "
-A LOGACCEPT -j ACCEPT

# Loopback is always okay
-A INPUT -i lo -j ACCEPT

# Any incoming not headed for the external IP drop (actually I don't want to
# need EXTIP if I don't need it )
#-A INPUT -i $EXTIF ! -d $EXTIP -j DROP

# ICMP
-A INPUT -p ICMP -j ACCEPT

# SSHGuard
-A INPUT -p tcp -m tcp --dport 22 -j sshguard

# SSH server
-A INPUT -p tcp --dport 22 -j ACCEPT

# SMTP incoming
-A INPUT -p tcp --dport 25 -j ACCEPT

# DNS server
-A INPUT -p tcp --dport 53 -j ACCEPT
-A INPUT -p udp --dport 53 -j ACCEPT

# ident
-A INPUT -p tcp --dport 113 -j ACCEPT

# HTTP/S server
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

# SMTP/TLS outgoing
-A INPUT -p tcp --dport 465 -j ACCEPT

# IMAP/TLS server
-A INPUT -p tcp --dport 993 -j ACCEPT

# OpenVPN server
-A INPUT -p tcp --dport 1194 -j ACCEPT
-A INPUT -p udp --dport 1194 -j ACCEPT

# MySQL server
-A INPUT -p tcp --dport 3306 -j ACCEPT

# IRC server
-A INPUT -p tcp --dport 6697 -j ACCEPT

# icecast
-A INPUT -i $INTIF -p tcp --dport 8000 -s 10.8.0.0/16 -j ACCEPT

# Teamspeak server
-A INPUT -p udp --dport 9987 -j ACCEPT
-A INPUT -p tcp --dport 30033 -j ACCEPT

# Killing Floor server
-A INPUT -p udp --dport 7707 -j ACCEPT
-A INPUT -p udp --dport 7708 -j ACCEPT
-A INPUT -p udp --dport 7717 -j ACCEPT
-A INPUT -p tcp --dport 8075 -j ACCEPT
-A INPUT -p tcp --dport 20560 -j ACCEPT
-A INPUT -p udp --dport 20560 -j ACCEPT
-A INPUT -p tcp --dport 28852 -j ACCEPT
-A INPUT -p udp --dport 28852 -j ACCEPT

# mosh
-A INPUT -p udp --dport 60000:61000 -j ACCEPT

# murmur
-A INPUT -p tcp --dport 64738 -j ACCEPT
-A INPUT -p udp --dport 64738 -j ACCEPT

# Existing connections are fine
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT



# Forwarding existing connections to the internal interface is fine
#-A FORWARD -i $EXTIF -o $INTIF -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
#-A FORWARD -i tun0 -o $INTIF -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Internal network to universe is fine
-A FORWARD -i $INTIF -j ACCEPT

# Port forwards
-A FORWARD -o $INTIFCTF -p tcp --dport 22 -j ACCEPT

# Don't forward traffic from outside to outside
-A FORWARD -i $EXTIF -o $EXTIF -j DROP



COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# Masquerade outgoing for NAT
#-A POSTROUTING -o $EXTIF -j MASQUERADE
#-A POSTROUTING -o tun0 -j MASQUERADE
#-A POSTROUTING -o tun1 -j MASQUERADE
-A POSTROUTING ! -o lo -j MASQUERADE

# Port forwards
-A PREROUTING -p tcp --dport 23 -j DNAT --to 10.194.0.45:22


COMMIT

EOF

#systemctl restart iptables

exit
EXTIF=sixxs
#INTIF=br0 # leave set from above

cat >/etc/iptables/ip6tables.rules.new <<EOF
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Bad Stuff (don't copy over)
-A INPUT -m rt --rt-type 0 -j DROP
-A FORWARD -m rt --rt-type 0 -j DROP
-A OUTPUT -m rt --rt-type 0 -j DROP

-N LOGDROP
-A LOGDROP -p tcp -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "TCP LOGDROP: "
-A LOGDROP -p udp -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "UDP LOGDROP: "
-A LOGDROP -p icmpv6 -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "ICMP LOGDROP: "
-A LOGDROP -m limit --limit $LOGDROPLIMIT --limit-burst $LOGDROPLIMITBURST -j LOG --log-prefix "FRAGMENT LOGDROP: "
-A LOGDROP -j DROP

-N LOGACCEPT
-A LOGACCEPT -p tcp -j LOG --log-prefix "TCP LOGACCEPT: "
-A LOGACCEPT -p udp -j LOG --log-prefix "UDP LOGACCEPT: "
-A LOGACCEPT -p icmpv6 -j LOG --log-prefix "ICMP LOGACCEPT: "
-A LOGACCEPT -j LOG --log-prefix "FRAGMENT LOGACCEPT: "
-A LOGACCEPT -j ACCEPT

# Loopback is always okay
-A INPUT -i lo -j ACCEPT

# Any incoming not headed for the external IP drop (actually I don't want to
# need $EXTIP if I don't need it )
#-A INPUT -i $EXTIF ! -d $EXTIP -j DROP

# ICMP
-A INPUT -p ICMP -j ACCEPT

# DHCP server
-A INPUT -i $INTIF -p tcp --sport 67 --dport 68 -j ACCEPT
-A INPUT -i $INTIF -p udp --sport 67 --dport 68 -j ACCEPT

# SSH server
-A INPUT -p tcp --dport 22 -j ACCEPT

# TFTP server
-A INPUT -p udp --dport 69 -j ACCEPT

# Minecraft server
-A INPUT -p tcp --dport 25565 -j ACCEPT
-A INPUT -p udp --dport 25565 -j ACCEPT

# Existing connections are fine
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# New ones are too unless they're from outside
-A INPUT -m conntrack --ctstate NEW ! -i $EXTIF -j ACCEPT

# Forwarding existing connections to the internal interface is fine
-A FORWARD -i $EXTIF -o $INTIF -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Internal network to universe is fine
-A FORWARD -i $INTIF -o $EXTIF -j ACCEPT

# Don't forward traffic from outside to outside
-A FORWARD -i $EXTIF -o $EXTIF -j DROP

COMMIT
EOF

echo "Enable failsafe in crontab, use iptables-restore on the .new, test, then replace iptables.rules with .new"
echo "Don't forget ipv6"

