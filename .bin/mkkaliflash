#!/bin/bash -e

if [ "`whoami`" != "root" ] ; then
    echo "Elevating..."
    sudo $0 $@
    exit
fi

USEPV="y" # y=pretty but not parallel
ISO="/media/bulk1/OS/Linux/kali-linux-1.0-amd64.iso"
#ISO="/dev/shm/kali-linux-1.0-amd64.iso"
ISOSIZE="2500M" # size of image partition
NICENAME="Kali Linux 1.0 x86_64" # for grub menu
PERSISTLABEL="persistence" # "casper-rw" for backtrack, "persistence" for kali


ISONAME="`basename $ISO`"

if [ "$1" == "" ] ; then
    echo "Continuing will permanently erase all serially attached block devices\n not configured otherwise! Type \"Do it!\" to continue: "
    read doit
    if [ "x$doit" != "xDo it!" ] ; then exit 1 ; fi

    # unmount any stale stuff
    umount /tmp/btmnt/* >/dev/null 2>&1 || true
    # mount the iso
    mkdir -p /tmp/btmnt/iso
    mount -o loop $ISO /tmp/btmnt/iso
    # fork for each drive e-z (a-d are system)
    for each in `ls /dev/ | grep -e "sd[e-z]$"` ; do
        echo "forking for $each"
        if [ "x$USEPV" == "xy" ] ; then # if single-threaded
            $0 $each || echo "FAILED! $each"
        else
            $0 $each || echo "FAILED! $each" &
        fi
    done
    # clean up
    echo "Press [Enter] when all are done." #todo: poll pgrep
    read junk
    sync;sync
    umount /tmp/btmnt/*
    rm -rf /tmp/btmnt
    echo
else
    # grab the argument ($1 is the block device to install to)
    export each=$1
    if true ; then # for easy config edits
        # ensure it's unmounted, ignore failures
        umount /dev/$each* >/dev/null 2>&1 || true
        # wipe the first 2K for consistency
        dd if=/dev/zero of=/dev/$each bs=1024 count=2 >/dev/null 2>&1
        # partition: 1 is to prevent Windows from breaking things ("This disk must
        # be formatted before use. Format now? [OK]"). 2 is the image, 3 is persistence
        #echo -e "mklabel msdos\nmkpart p fat32 0% $ISOSIZE\nmkpart p ext4 $ISOSIZE 100%\nq\n" | parted /dev/$each >/dev/null 2>&1
        echo -e "mklabel msdos\nmkpart p fat32 0% 1%\nmkpart p fat32 1% $ISOSIZE\nmkpart p ext4 $ISOSIZE 100%\nq\n" | parted /dev/$each >/dev/null #2>&1
        # create filesystems (todo: try ext4 for image. drawback: windows: "Format? Y/n")
        mkfs.vfat -F 32 -n Kali "/dev/$each"1 >/dev/null 2>&1
        mkfs.ext4 -b 4096 -L KaliImg "/dev/$each"2 >/dev/null 2>&1
        mkfs.ext4 -b 4096 -L $PERSISTLABEL "/dev/$each"3 >/dev/null 2>&1
    fi
    # mount both partitions
    mkdir -p /tmp/btmnt/$each
    mkdir -p /tmp/btmnt/$each-rw
    mount "/dev/$each"2 /tmp/btmnt/$each
    mount "/dev/$each"3 /tmp/btmnt/$each-rw
    # install grub
    mkdir -p /tmp/btmnt/$each/boot/media
    grub-install --no-floppy --root-directory=/tmp/btmnt/$each/ /dev/$each >/dev/null 2>&1
    # copy prebuilt persistence data
    #rsync -r /home/mal/rbtiso/* /tmp/btmnt/$each
    # copy image
    rsync -ax /tmp/btmnt/iso/ /tmp/btmnt/$each/ #>/dev/null
    sync;sync # yes, this is functionally different from just one sync
    # write persistence config
    echo "/ union" >> /tmp/btmnt/$each-rw/persistence.conf
    # write grub config
    cat >/tmp/btmnt/$each/boot/grub/grub.cfg <<EOF
set gfxmode=auto
menuentry "$NICENAME" {
    insmod vbe
    echo 'Setting atomic batteries to 1.21 jiggawatts...'
    linux /live/vmlinuz boot=live noconfig=sudo username=root hostname=kali initrd=/live/initrd.img persistence
    echo 'Accelerating to 88 mph...'
    initrd /live/initrd.img
}
menuentry "$NICENAME Forensics (Non-Persistent)" {
    insmod vbe
    echo 'Loading vmlinuz...'
    linux /live/vmlinuz boot=live noconfig=sudo username=root hostname=kali initrd=/live/initrd.img noswap noautomount
    echo 'Loading initial ramdisk...'
    initrd /live/initrd.img
}
EOF
    # clean up
    umount /tmp/btmnt/$each*
    rmdir /tmp/btmnt/$each*
    echo "!!$each:done!!"
fi
